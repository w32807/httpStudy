plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.jwj'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	// 내장 톰캣의 경우 ProvideRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	// 이렇게 되어있는데 인텔리제이에서 인식 못하는 경우가 있다.
	// 그럴 때는 customProvidedRuntime를 configurations 선언 후
	// customProvidedRuntime 'org.springframework.boot:spring-boot-starter-tomcat' 로 바꿔주자
	customProvidedRuntime
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	customProvidedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// DB
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.1'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'

	// Thymeleaf
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:testcontainers:1.16.3'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	// Utils
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'com.google.guava:guava:30.1.1-jre'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// thumbnail
	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.16'

}

test {
	useJUnitPlatform()
}

//이 경로가 인텔리제이와 다름(QueryDsl의 객체들이 생성될 경로)
/*Intellij*/
def querydslDir = "$buildDir/generated/querydsl"


querydsl{
	jpa = true
	querydslSourcesDir = querydslDir
}

/*Intellij*/
sourceSets{
	main.java.srcDir querydslDir
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

